{"version":3,"sources":["services/Contacts.js","App.js","index.js"],"names":["url","Axios","get","then","response","data","personObject","post","id","delete","put","AddNewPersonForm","formControls","onSubmit","addNewPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterForm","newFilter","handleFilterChange","Contacts","personsToShow","removePerson","map","person","key","name","Person","number","onClick","Notification","message","msg","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","systemMessage","setSystemMessage","useEffect","ContactService","contacts","filter","toLowerCase","includes","event","preventDefault","window","confirm","oldPerson","find","updatedPerson","returnedPerson","setTimeout","catch","error","concat","console","log","alert","target","removedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24e41168.chunk.js","sourcesContent":["import Axios from 'axios'\nconst url = `/api/persons`\n\nconst getContacts = () => {\n  return Axios.get(url).then(response => response.data)\n}\nconst createContact = personObject => {\n  return Axios.post(url, personObject).then(response => response.data)\n}\nconst removeContact = id => {\n  return Axios.delete(`${url}/${id}`).then(response => response.data)\n}\nconst updateContact = (id, personObject) => {\n  return Axios.put(`${url}/${id}`, personObject).then(response => response.data)\n}\nexport default {\n  getContacts,\n  createContact,\n  removeContact,\n  updateContact\n}","import React, { useState, useEffect } from 'react'\nimport ContactService from './services/Contacts'\n\n// from example at https://fullstackopen.com/osa2/lomakkeiden_kasittely#tehtavat-2-6-2-10\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [systemMessage, setSystemMessage] = useState(['success', null])\n  useEffect(() => {\n    ContactService.getContacts()\n      .then(contacts => {\n        setPersons(contacts)\n      })\n  }, [])\n  const personsToShow = showAll // filter names that contain substring newFilter\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  const handleNameChange = (event) => { //eventhandlers for textbox\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => { // -''-\n    setNewNumber(event.target.value)\n  }\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const names = persons.map(person => person.name.toLowerCase())\n    if (names.includes(newName.toLowerCase())) {\n      const message = `${newName} is already in you phonebook. Update contact number?`\n      if (window.confirm(message)) {\n        const oldPerson = persons\n          .find(person => person.name.toLowerCase() === newName.toLowerCase())\n        const updatedPerson = { ...oldPerson, number: newNumber }\n        ContactService.updateContact(oldPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n            setSystemMessage(['success', `Updated ${returnedPerson.name}!`])\n            setTimeout(() => {\n              setSystemMessage(['success', null])\n            }, 2000)\n          }).catch(error => {\n            setPersons(persons.filter(person => person.id !== updatedPerson.id))\n            const message = `Contact ${updatedPerson.name} has already been removed from the server.`\n            setSystemMessage(['error', message])\n            setTimeout(() => {\n              setSystemMessage(['success', null])\n            }, 2000)\n          })\n        setNewName('')\n        setNewNumber('')\n      }\n    } else if (newName !== \"\" && newNumber !== \"\") { //creates a new person\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      ContactService.createContact(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setSystemMessage(['success', `Added ${returnedPerson.name}!`])\n          setTimeout(() => {\n            setSystemMessage(['success', null])\n          }, 2000)\n        }).catch(error => {\n          console.log(error)\n        })\n\n      setNewName('')\n      setNewNumber('')\n    } else {\n      window.alert('Contact name and number required!')\n    }\n  }\n  const removePerson = (removedPerson) => {\n    const message = `Delete ${removedPerson.name}?`\n    if (window.confirm(message)) {\n      ContactService.removeContact(removedPerson.id)\n        .catch(error => {\n          console.log(error)\n        })\n      setSystemMessage(['success', `Deleted ${removedPerson.name}`])\n      setTimeout(() => {\n        setSystemMessage(['success', null])\n      }, 2000)\n      setPersons(persons.filter(person => person.id !== removedPerson.id))\n    }\n  }\n  const handleFilterChange = (event) => { //if empty filterfield, show all contacts\n    setNewFilter(event.target.value)\n    if (event.target.value === ('')) {\n      setShowAll(true)\n    } else {\n      setShowAll(false)\n    }\n  }\n  // controls for adding a new person to the contact list\n  const formControls = { addNewPerson, newName, handleNameChange, newNumber, handleNumberChange }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={systemMessage} />\n      <FilterForm newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <AddNewPersonForm formControls={formControls} />\n      <h2>Numbers</h2>\n      <Contacts personsToShow={personsToShow} removePerson={removePerson} />\n    </div >\n  )\n\n}\nconst AddNewPersonForm = ({ formControls }) => {\n  return (\n    <form onSubmit={formControls.addNewPerson}>\n      <legend><h3>Add a new contact</h3></legend>\n      <div>\n        name: <input value={formControls.newName} onChange={formControls.handleNameChange} /><br />\n        number: <input value={formControls.newNumber} onChange={formControls.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\nconst FilterForm = ({ newFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter results with <input value={newFilter} onChange={handleFilterChange} />\n    </div>\n  )\n}\nconst Contacts = ({ personsToShow, removePerson }) => {\n  return (\n    <div>\n      {personsToShow.map(person =>\n        <Person key={person.name} person={person} removePerson={removePerson} />\n      )}\n    </div>\n  )\n}\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <p>\n      {person.name} {person.number} <button onClick={() => removePerson(person)}>\n        remove\n      </button>\n    </p>\n  )\n}\n// from example at\n// https://fullstackopen.com/osa2/tyylien_lisaaminen_react_sovellukseen#parempi-virheilmoitus\nconst Notification = ({ message }) => {\n  const [type, msg] = message\n  if (msg === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {msg}\n    </div>\n  )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}